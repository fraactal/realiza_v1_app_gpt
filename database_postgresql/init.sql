DROP TABLE IF EXISTS PROYECTOS;
DROP TABLE IF EXISTS CAMPUS;
DROP TABLE IF EXISTS USUARIO;
DROP TABLE IF EXISTS CATEGORIAS;
DROP TABLE IF EXISTS SUBCATEGORIAS;
DROP TABLE IF EXISTS ALCANCES;
DROP TABLE IF EXISTS UNIDAD_FUENTE; 
DROP TABLE IF EXISTS UNIDAD_FACTOR_EMISION; 
DROP TABLE IF EXISTS TIPOS_GAS_GEI; 

DROP TABLE IF EXISTS VALOR_UNIDAD_X_FACTOR_EMISION; 
DROP TABLE IF EXISTS FACTOR_DE_EMISION; 

DROP TABLE IF EXISTS FUENTE; 
DROP TABLE IF EXISTS CONSUMOS; 

-- Crear pgcripto para guardar contraseñas con hash
CREATE EXTENSION IF NOT EXISTS pgcrypto;

CREATE TABLE PROYECTOS(
ID_PROYECTO int,
NOMBRE varchar(100),
DESCRIPCION text,
PRIMARY KEY(ID_PROYECTO)
);

CREATE TABLE CAMPUS(
ID_CAMPUS int,
ID_PROYECTO int not null,
NOMBRE varchar(100),
HUELLA_DE_CARBONO numeric(30,10),
HUELLA_HIDRICA numeric(30,10),
HUELLA_FINANCIERA numeric(30,10),
PRIMARY KEY(ID_CAMPUS),
   CONSTRAINT fk_c_proyecto
      FOREIGN KEY(ID_PROYECTO) 
        REFERENCES PROYECTOS(ID_PROYECTO)
);

CREATE TABLE USUARIO(
ID_USUARIO varchar(100),
ID_PROYECTO int not null,
ID_CAMPUS int not null,
CONTRASENA TEXT not null,
NOMBRE varchar(100) not null,
CORREO varchar(100),
TIPO_USUARIO char(1), 
ACTIVO boolean not null,
PRIMARY KEY(ID_USUARIO),
   CONSTRAINT fk_u_campus
      FOREIGN KEY(ID_CAMPUS) 
        REFERENCES CAMPUS(ID_CAMPUS)
);

CREATE TABLE CATEGORIAS(	
ID_CATEGORIA int,
NOMBRE varchar(150) not null,
DESCRIPCION	text,
PRIMARY KEY(ID_CATEGORIA)
);

CREATE TABLE SUBCATEGORIAS(	
ID_SUBCATEGORIA	int,
ID_CATEGORIA int,
NOMBRE	varchar(100) not null,
DESCRIPCION	text,
PRIMARY KEY(ID_SUBCATEGORIA),
   CONSTRAINT fk_categoria
      FOREIGN KEY(ID_CATEGORIA) 
        REFERENCES CATEGORIAS(ID_CATEGORIA)
);

CREATE TABLE ALCANCES(
ID_ALCANCES	int,
NOMBRE varchar(100) not null,
DESCRIPCION	text,
PRIMARY KEY(ID_ALCANCES)
);


CREATE TABLE UNIDAD_FUENTE(
ID_UNIDAD_FUENTE int,
NOMBRE varchar(100) not null,
SIGLA	varchar(15) not null,
PRIMARY KEY(ID_UNIDAD_FUENTE)
);

CREATE TABLE FUENTE(
ID_FUENTE int,
NOMBRE varchar(150) not null, -- Viajes de negocios - Terrestre - Vehículo particular - gasolina
--ID_FACTOR_EMISION	int, -- No va idFactorEmision. Se debe pasar a la tabla FACTOR_DE_EMISION el idFuente
ID_UNIDAD_FUENTE	int,
ID_ALCANCES int,
ID_CATEGORIA int,
ID_SUBCATEGORIA int,
PRIMARY KEY(ID_FUENTE),
    CONSTRAINT fk_f_alcance
      FOREIGN KEY(ID_ALCANCES) 
        REFERENCES ALCANCES(ID_ALCANCES),
    CONSTRAINT fk_f_categoria
      FOREIGN KEY(ID_CATEGORIA) 
        REFERENCES CATEGORIAS(ID_CATEGORIA),
    CONSTRAINT fk_f_subcategoria
      FOREIGN KEY(ID_SUBCATEGORIA) 
        REFERENCES SUBCATEGORIAS(ID_SUBCATEGORIA),
    CONSTRAINT fk_f_unidad_fuente
      FOREIGN KEY(ID_UNIDAD_FUENTE) 
        REFERENCES UNIDAD_FUENTE(ID_UNIDAD_FUENTE)
);


CREATE TABLE UNIDAD_FACTOR_EMISION(
ID_UNIDAD_FACTOR_EMISION int,
NOMBRE varchar(100) not null,  -- kgCO2eq/litros
PRIMARY KEY(ID_UNIDAD_FACTOR_EMISION)
);

CREATE TABLE TIPOS_GAS_GEI(
ID_GAS_GEI int,
NOMBRE varchar(100) not null, -- dioxido de carbono
SIGLA varchar(15), -- CO2
PRIMARY KEY(ID_GAS_GEI)
);

CREATE TABLE FACTOR_DE_EMISION(
ID_FACTOR_EMISION int,
FUENTE_EMISION varchar(150) not null, --Caldera - Gas licuado de petróleo
COMBUSTIBLE varchar(100),
ORIGEN_DEL_FE varchar(100),	
INCERTIDUMBRE varchar(10), -- Alta, Media, Baja
ID_UNIDAD_FACTOR_EMISION int,
ID_FUENTE int, --Caldera - Gas licuado de petróleo
PRIMARY KEY(ID_FACTOR_EMISION),
    CONSTRAINT fk_fe_unidad_fe
      FOREIGN KEY(ID_UNIDAD_FACTOR_EMISION) 
        REFERENCES UNIDAD_FACTOR_EMISION(ID_UNIDAD_FACTOR_EMISION),
    CONSTRAINT fk_fe_Fuente
      FOREIGN KEY(ID_FUENTE) 
        REFERENCES FUENTE(ID_FUENTE)
);
-- Camnbian año a año (agregar año)

-- Valor de unida gas GEI x factos de emision
CREATE TABLE VALOR_UNIDAD_X_FACTOR_EMISION(
ID_FACTOR_EMISION int,
ID_GAS_GEI int,
VALOR numeric(30,10),
PRIMARY KEY(ID_FACTOR_EMISION, ID_GAS_GEI),
    CONSTRAINT fk_valor_fe
      FOREIGN KEY(ID_FACTOR_EMISION) 
        REFERENCES FACTOR_DE_EMISION(ID_FACTOR_EMISION),
    CONSTRAINT fk_valor_gei
      FOREIGN KEY(ID_GAS_GEI) 
        REFERENCES TIPOS_GAS_GEI(ID_GAS_GEI)
);


CREATE TABLE CONSUMOS(	
ID_CONSUMO varchar(50),  -- validar el tipo de dato UUID 
ID_FUENTE int,
CANTIDAD_FUENTE	numeric(30,5),
FECHA DATE NOT NULL DEFAULT CURRENT_DATE,
LINK_RESPALDO	text,
COMENTARIOS	text,
HUELLACHILE	boolean,
ID_CAMPUS	int, -- Campus corresponde a proyecto
PRIMARY KEY(ID_CONSUMO),
    CONSTRAINT fk_c_fuente
      FOREIGN KEY(ID_FUENTE) 
        REFERENCES FUENTE(ID_FUENTE),
    CONSTRAINT fk_c_campus
      FOREIGN KEY(ID_CAMPUS) 
        REFERENCES CAMPUS(ID_CAMPUS)
);
-- Agregar fecha de consumo
